#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã begin_notif
"""

def test_parse_args():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        {
            "input": ["sosal", "10", "10:00", "@dimoha_zadira", "@ilya_savitsky"],
            "expected": {
                "message": "sosal",
                "interval": 10,
                "time": "10:00",
                "tags": ["@dimoha_zadira", "@ilya_savitsky"]
            }
        },
        {
            "input": ["–ü–æ—Ä–∞", "–ø–∏—Ç—å", "–≤–æ–¥—É!", "30", "09:00"],
            "expected": {
                "message": "–ü–æ—Ä–∞ –ø–∏—Ç—å –≤–æ–¥—É!",
                "interval": 30,
                "time": "09:00",
                "tags": []
            }
        },
        {
            "input": ["–¢–µ—Å—Ç", "15", "14:30", "@user1", "@user2", "@user3"],
            "expected": {
                "message": "–¢–µ—Å—Ç",
                "interval": 15,
                "time": "14:30",
                "tags": ["@user1", "@user2", "@user3"]
            }
        },
        {
            "input": ["@user1", "–°–æ–æ–±—â–µ–Ω–∏–µ", "45", "16:00", "@user2"],
            "expected": {
                "message": "@user1 –°–æ–æ–±—â–µ–Ω–∏–µ",
                "interval": 45,
                "time": "16:00",
                "tags": ["@user2"]
            }
        }
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
    print("=" * 50)
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\nüìã –¢–µ—Å—Ç {i}:")
        print(f"   –í—Ö–æ–¥: {test_case['input']}")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–∑ –±–æ—Ç–∞
        args = test_case['input']
        
        # –ò—â–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏ –≤—Ä–µ–º—è —Å—Ä–µ–¥–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        interval_minutes = None
        start_time = None
        interval_index = -1
        time_index = -1
        
        import re
        
        for i, arg in enumerate(args):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º (—á–∏—Å–ª–æ)
            if interval_minutes is None:
                try:
                    potential_interval = int(arg)
                    if potential_interval > 0:
                        interval_minutes = potential_interval
                        interval_index = i
                        continue
                except ValueError:
                    pass
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–µ–º (—Ñ–æ—Ä–º–∞—Ç HH:MM)
            if start_time is None and re.match(r'^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$', arg):
                start_time = arg
                time_index = i
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—à–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏ –≤—Ä–µ–º—è
        if interval_minutes is None:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª")
            continue
        
        if start_time is None:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤—Ä–µ–º—è")
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—è–¥–æ–∫: –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–¥ –≤—Ä–µ–º–µ–Ω–µ–º
        if interval_index > time_index:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
            continue
        
        # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–µ–≥–∏
        message_parts = []
        tagged_users = []
        
        for i, arg in enumerate(args):
            if i == interval_index or i == time_index:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏ –≤—Ä–µ–º—è
            
            if arg.startswith('@'):
                tagged_users.append(arg)
            else:
                message_parts.append(arg)
        
        # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = " ".join(message_parts)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = {
            "message": message,
            "interval": interval_minutes,
            "time": start_time,
            "tags": tagged_users
        }
        
        expected = test_case['expected']
        
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"     –°–æ–æ–±—â–µ–Ω–∏–µ: '{result['message']}'")
        print(f"     –ò–Ω—Ç–µ—Ä–≤–∞–ª: {result['interval']}")
        print(f"     –í—Ä–µ–º—è: {result['time']}")
        print(f"     –¢–µ–≥–∏: {result['tags']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        if (result['message'] == expected['message'] and 
            result['interval'] == expected['interval'] and 
            result['time'] == expected['time'] and 
            result['tags'] == expected['tags']):
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞! –û–∂–∏–¥–∞–ª–æ—Å—å: {expected}")
    
    print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_parse_args() 