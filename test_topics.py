#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–ø–∏–∫–∞–º–∏ –≤ Annoying Bot
"""

import asyncio
from notification_manager import NotificationManager
from storage import NotificationStorage

class MockBot:
    """–ú–æ–∫-–æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    async def send_message(self, chat_id: int, text: str, parse_mode: str = None, message_thread_id: int = None):
        """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è"""
        topic_info = f" (topic: {message_thread_id})" if message_thread_id else " (main chat)"
        print(f"ü§ñ –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç {chat_id}{topic_info}:")
        print(f"   {text}")
        print()
    
    async def get_chat_member(self, chat_id: int, user_id):
        """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        class MockUser:
            def __init__(self, user_id):
                if isinstance(user_id, str):
                    self.id = int(user_id.replace('@', '').replace('user', ''))
                    self.username = user_id.replace('@', '')
                else:
                    self.id = user_id
                    self.username = f"user{user_id}"
                self.first_name = f"User{self.id}"
        
        class MockChatMember:
            def __init__(self, user_id):
                self.user = MockUser(user_id)
        
        return MockChatMember(user_id)

async def test_topics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ç–æ–ø–∏–∫–∞–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–ø–∏–∫–∞–º–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–±–æ—Ç –∏ –º–µ–Ω–µ–¥–∂–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    mock_bot = MockBot()
    notification_manager = NotificationManager(mock_bot, "test_topics_notifications.json")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    group_chat_id = -1001234567890
    topic_id = 12345  # ID —Ç–æ–ø–∏–∫–∞
    test_message = "–ü–æ—Ä–∞ –ø–∏—Ç—å –≤–æ–¥—É!"
    interval_minutes = 30
    start_time = "09:00"
    tagged_users = [123, 456]
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"   –ß–∞—Ç ID: {group_chat_id}")
    print(f"   –¢–æ–ø–∏–∫ ID: {topic_id}")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {test_message}")
    print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª: {interval_minutes} –º–∏–Ω—É—Ç")
    print(f"   –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {start_time}")
    print(f"   –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {tagged_users}")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫–µ
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ç–æ–ø–∏–∫–µ...")
    await notification_manager.start_notification(
        group_chat_id, test_message, interval_minutes, start_time, tagged_users, topic_id
    )
    print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ç–æ–ø–∏–∫–µ!")
    print()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("üì§ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫...")
    active_notifications = notification_manager.get_active_notifications()
    notification_data = active_notifications[group_chat_id]
    await notification_manager._send_notification(group_chat_id, notification_data)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ message_thread_id —Å–æ—Ö—Ä–∞–Ω–µ–Ω
    print("üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è message_thread_id...")
    saved_thread_id = notification_data.get('message_thread_id')
    if saved_thread_id == topic_id:
        print(f"   ‚úÖ message_thread_id —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {saved_thread_id}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–ª—Å—è {topic_id}, –ø–æ–ª—É—á–µ–Ω {saved_thread_id}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±–µ–∑ —Ç–æ–ø–∏–∫–∞ (–æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç)
    print("üì§ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç...")
    main_chat_id = -1009876543210
    
    await notification_manager.start_notification(
        main_chat_id, "–¢–µ—Å—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —á–∞—Ç–µ", 15, "10:00", None, None
    )
    
    main_notification = notification_manager.get_active_notifications()[main_chat_id]
    await notification_manager._send_notification(main_chat_id, main_notification)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    print("üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...")
    storage_info = notification_manager.get_storage_info()
    print(f"   –§–∞–π–ª: {storage_info['file_path']}")
    print(f"   –†–∞–∑–º–µ—Ä: {storage_info['size']} –±–∞–π—Ç")
    print(f"   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {storage_info['notifications_count']}")
    print()
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    await notification_manager.clear_all_notifications()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
    print()
    
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_storage_topics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–ø–∏–∫–æ–≤ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–ø–∏–∫–æ–≤ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ")
    print("=" * 50)
    
    storage = NotificationStorage("test_topics_storage.json")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ç–æ–ø–∏–∫–∞–º–∏
    test_notifications = {
        -1001234567890: {
            'message': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ',
            'interval_minutes': 30,
            'start_hour': 9,
            'start_minute': 0,
            'active': True,
            'chat_id': -1001234567890,
            'message_thread_id': 12345,
            'tagged_users': [123, 456],
            'responded_users': {123}
        },
        -1009876543210: {
            'message': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —á–∞—Ç–µ',
            'interval_minutes': 15,
            'start_hour': 10,
            'start_minute': 0,
            'active': True,
            'chat_id': -1009876543210,
            'message_thread_id': None,
            'tagged_users': [],
            'responded_users': set()
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–æ–ø–∏–∫–∞–º–∏...")
    success = storage.save_notifications(test_notifications)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º
    print("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
    loaded_notifications = storage.load_notifications()
    print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(loaded_notifications)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    for chat_id, notification in loaded_notifications.items():
        print(f"   –ß–∞—Ç {chat_id}:")
        print(f"     –°–æ–æ–±—â–µ–Ω–∏–µ: {notification['message']}")
        print(f"     –¢–æ–ø–∏–∫ ID: {notification['message_thread_id']}")
        print(f"     –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {notification['tagged_users']}")
    
    # –û—á–∏—â–∞–µ–º
    storage.delete_storage()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    print()

if __name__ == "__main__":
    print("ü§ñ Annoying Bot - –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–ø–∏–∫–∞–º–∏")
    print("=" * 60)
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–ø–∏–∫–æ–≤
    test_storage_topics()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å —Ç–æ–ø–∏–∫–∞–º–∏
    asyncio.run(test_topics()) 