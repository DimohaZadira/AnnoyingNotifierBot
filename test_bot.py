#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Annoying Bot
"""

import asyncio
import logging
import os
from datetime import datetime
import pytz
from notification_manager import NotificationManager
from storage import NotificationStorage

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_storage():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞"""
    print("üíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    test_file = "test_notifications.json"
    storage = NotificationStorage(test_file)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...")
    test_notifications = {
        12345: {
            'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'interval_minutes': 30,
            'start_hour': 9,
            'start_minute': 0,
            'active': True,
            'last_response_time': datetime.now(pytz.timezone('Europe/Moscow')),
            'last_sent': datetime.now(pytz.timezone('Europe/Moscow'))
        }
    }
    
    success = storage.save_notifications(test_notifications)
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {'—É—Å–ø–µ—à–Ω–æ' if success else '–æ—à–∏–±–∫–∞'}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏...")
    loaded_notifications = storage.load_notifications()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(loaded_notifications)}")
    
    if loaded_notifications:
        notification = loaded_notifications[12345]
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ: {notification['message']}")
        print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {notification['interval_minutes']} –º–∏–Ω—É—Ç")
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω–æ: {notification['active']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...")
    storage_info = storage.get_storage_info()
    print(f"‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {storage_info['exists']}")
    print(f"‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {storage_info['size']} –±–∞–π—Ç")
    print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {storage_info['notifications_count']}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    storage.delete_storage()
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    
    print("\nüéâ –¢–µ—Å—Ç—ã —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")

async def test_notification_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å NotificationManager"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NotificationManager...")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    class MockBot:
        async def send_message(self, chat_id, text):
            print(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {text}")
    
    bot = MockBot()
    manager = NotificationManager(bot, "test_manager.json")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    await manager.start_notification(12345, "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 5, "14:30")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    active = manager.get_active_notifications()
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(active)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    storage_info = manager.get_storage_info()
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: {storage_info['notifications_count']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫—É
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    manager.pause_notifications(12345)
    active = manager.get_active_notifications()
    if 12345 in active:
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: {not active[12345]['active']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    await manager.stop_notification(12345)
    active = manager.get_active_notifications()
    print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: {len(active) == 0}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    manager.storage.delete_storage()
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")

def test_time_parsing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏"""
    print("\nüïê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏...")
    
    test_times = ["09:00", "14:30", "23:59", "00:00"]
    
    for time_str in test_times:
        try:
            hour, minute = map(int, time_str.split(':'))
            print(f"‚úÖ {time_str} -> {hour:02d}:{minute:02d}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ {time_str}: {e}")

def test_moscow_timezone():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º"""
    print("\nüåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞...")
    
    moscow_tz = pytz.timezone('Europe/Moscow')
    now = datetime.now(moscow_tz)
    
    print(f"‚úÖ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –ú–æ—Å–∫–≤–µ: {now.strftime('%Y-%m-%d %H:%M:%S %Z')}")

async def test_persistence():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏...")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    class MockBot:
        async def send_message(self, chat_id, text):
            print(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {text}")
    
    test_file = "test_persistence.json"
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
    bot1 = MockBot()
    manager1 = NotificationManager(bot1, test_file)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    await manager1.start_notification(12345, "–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 10, "15:00")
    active1 = manager1.get_active_notifications()
    print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ø–µ—Ä–≤–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ: {len(active1)}")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    await manager1.stop_notification(12345)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä (—Å–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É)
    print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞)...")
    bot2 = MockBot()
    manager2 = NotificationManager(bot2, test_file)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    active2 = manager2.get_active_notifications()
    print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤–æ –≤—Ç–æ—Ä–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ: {len(active2)}")
    
    if active2:
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        await manager2.stop_notification(12345)
    else:
        print("‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    manager2.storage.delete_storage()
    
    print("\nüéâ –¢–µ—Å—Ç –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Annoying Bot —Å –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º")
    print("=" * 70)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_time_parsing()
    test_moscow_timezone()
    
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    asyncio.run(test_storage())
    asyncio.run(test_notification_manager())
    asyncio.run(test_persistence())
    
    print("\n" + "=" * 70)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("üíæ –ë–æ—Ç —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!") 