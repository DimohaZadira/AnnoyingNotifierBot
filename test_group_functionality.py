#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≥—Ä—É–ø–ø–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Annoying Bot

–≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
1. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
2. –¢–µ–≥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–º–∞–Ω–¥–µ begin_notif
3. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
4. –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–≥–æ–≤ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
"""

import asyncio
import json
from datetime import datetime
from notification_manager import NotificationManager
from storage import NotificationStorage

class MockBot:
    """–ú–æ–∫-–æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    async def send_message(self, chat_id: int, text: str, parse_mode: str = None):
        """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è"""
        print(f"ü§ñ –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç {chat_id}:")
        print(f"   {text}")
        print()
    
    async def get_chat_member(self, chat_id: int, user_id):
        """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        class MockUser:
            def __init__(self, user_id):
                if isinstance(user_id, str):
                    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å @username
                    self.id = int(user_id.replace('@', '').replace('user', ''))
                    self.username = user_id.replace('@', '')
                else:
                    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ —á–∏—Å–ª–æ (user_id)
                    self.id = user_id
                    self.username = f"user{user_id}"
                self.first_name = f"User{self.id}"
        
        class MockChatMember:
            def __init__(self, user_id):
                self.user = MockUser(user_id)
        
        return MockChatMember(user_id)

async def test_group_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥—Ä—É–ø–ø–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Annoying Bot")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–±–æ—Ç –∏ –º–µ–Ω–µ–¥–∂–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    mock_bot = MockBot()
    notification_manager = NotificationManager(mock_bot, "test_group_notifications.json")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    group_chat_id = -1001234567890  # ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞
    test_message = "–ü–æ—Ä–∞ –ø–∏—Ç—å –≤–æ–¥—É!"
    interval_minutes = 30
    start_time = "09:00"
    tagged_users = [123, 456, 789]  # ID —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"   –ß–∞—Ç ID: {group_chat_id}")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {test_message}")
    print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª: {interval_minutes} –º–∏–Ω—É—Ç")
    print(f"   –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {start_time}")
    print(f"   –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {tagged_users}")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    await notification_manager.start_notification(
        group_chat_id, test_message, interval_minutes, start_time, tagged_users
    )
    print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã!")
    print()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("üì§ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    active_notifications = notification_manager.get_active_notifications()
    notification_data = active_notifications[group_chat_id]
    await notification_manager._send_notification(group_chat_id, notification_data)
    print()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("üë• –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 123 –æ—Ç–≤–µ—á–∞–µ—Ç
    print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 123 –æ—Ç–≤–µ—á–∞–µ—Ç...")
    notification_manager.handle_user_response(group_chat_id, 123)
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 456 –æ—Ç–≤–µ—á–∞–µ—Ç
    print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 456 –æ—Ç–≤–µ—á–∞–µ—Ç...")
    notification_manager.handle_user_response(group_chat_id, 456)
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 789 –æ—Ç–≤–µ—á–∞–µ—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–π)
    print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 789 –æ—Ç–≤–µ—á–∞–µ—Ç...")
    notification_manager.handle_user_response(group_chat_id, 789)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    notification = active_notifications[group_chat_id]
    responded_count = len(notification.get('responded_users', set()))
    total_count = len(notification['tagged_users'])
    print(f"   –û—Ç–≤–µ—Ç–∏–ª–∏: {responded_count}/{total_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    if responded_count == total_count:
        print("   ‚úÖ –í—Å–µ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Ç–≤–µ—Ç–∏–ª–∏!")
    else:
        print(f"   ‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å: {total_count - responded_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    print("‚è∏Ô∏è –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    notification_manager.pause_notifications(group_chat_id)
    print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    print("üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...")
    storage_info = notification_manager.get_storage_info()
    print(f"   –§–∞–π–ª: {storage_info['file_path']}")
    print(f"   –†–∞–∑–º–µ—Ä: {storage_info['size']} –±–∞–π—Ç")
    print(f"   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {storage_info['notifications_count']}")
    print()
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    await notification_manager.clear_all_notifications()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
    print()
    
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_storage_serialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    
    storage = NotificationStorage("test_serialization.json")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_notifications = {
        -1001234567890: {
            'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'interval_minutes': 30,
            'start_hour': 9,
            'start_minute': 0,
            'active': True,
            'chat_id': -1001234567890,
            'tagged_users': [123, 456, 789],
            'responded_users': {123, 456},
            'last_response_time': datetime.now(),
            'last_sent': datetime.now()
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
    success = storage.save_notifications(test_notifications)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º
    print("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
    loaded_notifications = storage.load_notifications()
    print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(loaded_notifications)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    if loaded_notifications:
        chat_id = list(loaded_notifications.keys())[0]
        notification = loaded_notifications[chat_id]
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {notification['message']}")
        print(f"   –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {notification['tagged_users']}")
        print(f"   –û—Ç–≤–µ—Ç–∏–≤—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {list(notification['responded_users'])}")
    
    # –û—á–∏—â–∞–µ–º
    storage.delete_storage()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    print()

if __name__ == "__main__":
    print("ü§ñ Annoying Bot - –¢–µ—Å—Ç –≥—Ä—É–ø–ø–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é
    test_storage_serialization()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    asyncio.run(test_group_functionality()) 