#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –æ—Ç–≤–µ—Ç–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio
import json
from datetime import datetime, timedelta
from unittest.mock import Mock, AsyncMock
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from notification_manager import NotificationManager
from storage import NotificationStorage

class TestPauseLogic:
    def __init__(self):
        self.storage = NotificationStorage("test_notifications.json")
        self.mock_bot = Mock()
        self.mock_bot.send_message = AsyncMock()
        self.notification_manager = NotificationManager(self.mock_bot, "test_notifications.json")
    
    def test_pause_on_user_response(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        chat_id = 12345
        user1_id = 111
        user2_id = 222
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        self.notification_manager.active_notifications[chat_id] = {
            'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'interval_minutes': 30,
            'start_hour': 9,
            'start_minute': 0,
            'active': True,
            'tagged_users': [user1_id, user2_id],
            'responded_users': set(),
            'last_response_time': None,
            'task': None
        }
        
        print(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: active={self.notification_manager.active_notifications[chat_id]['active']}")
        print(f"üë• –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {self.notification_manager.active_notifications[chat_id]['tagged_users']}")
        print(f"‚úÖ –û—Ç–≤–µ—Ç–∏–≤—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {self.notification_manager.active_notifications[chat_id]['responded_users']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user1_id} –æ—Ç–≤–µ—á–∞–µ—Ç...")
        self.notification_manager.handle_user_response(chat_id, user1_id)
        
        notification = self.notification_manager.active_notifications[chat_id]
        print(f"üìä –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user1_id}:")
        print(f"   active={notification['active']}")
        print(f"   responded_users={notification['responded_users']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω—ã
        assert notification['active'] == True, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        assert user1_id in notification['responded_users'], "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–∏–≤—à–∏—Ö"
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user2_id} –æ—Ç–≤–µ—á–∞–µ—Ç...")
        self.notification_manager.handle_user_response(chat_id, user2_id)
        
        notification = self.notification_manager.active_notifications[chat_id]
        print(f"üìä –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user2_id}:")
        print(f"   active={notification['active']}")
        print(f"   responded_users={notification['responded_users']}")
        print(f"   last_response_time={notification['last_response_time']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        assert notification['active'] == False, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        assert notification['last_response_time'] is not None, "–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        assert len(notification['responded_users']) == 0, "–°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–∏–≤—à–∏—Ö –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—á–∏—â–µ–Ω"
        
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    
    def test_pause_in_personal_chat(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ"""
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞
        chat_id = 54321
        user_id = 333
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.notification_manager.active_notifications[chat_id] = {
            'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'interval_minutes': 30,
            'start_hour': 9,
            'start_minute': 0,
            'active': True,
            'tagged_users': None,
            'responded_users': set(),
            'last_response_time': None,
            'task': None
        }
        
        print(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: active={self.notification_manager.active_notifications[chat_id]['active']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–≤–µ—á–∞–µ—Ç –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ...")
        self.notification_manager.pause_notifications(chat_id, user_id)
        
        notification = self.notification_manager.active_notifications[chat_id]
        print(f"üìä –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        print(f"   active={notification['active']}")
        print(f"   last_response_time={notification['last_response_time']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        assert notification['active'] == False, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        assert notification['last_response_time'] is not None, "–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    
    def test_resume_logic(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        chat_id = 99999
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        now = datetime.now()
        self.notification_manager.active_notifications[chat_id] = {
            'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'interval_minutes': 30,
            'start_hour': 9,
            'start_minute': 0,
            'active': False,
            'tagged_users': [111, 222],
            'responded_users': set(),
            'last_response_time': now - timedelta(hours=2),  # –û—Ç–≤–µ—Ç –±—ã–ª 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
            'task': None
        }
        
        print(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: active={self.notification_manager.active_notifications[chat_id]['active']}")
        print(f"üïê –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞: {self.notification_manager.active_notifications[chat_id]['last_response_time']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
        notification = self.notification_manager.active_notifications[chat_id]
        next_start = self.notification_manager._get_next_start_time(notification)
        print(f"üïê –í—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞: {next_start}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        assert next_start.hour == 9, "–í—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ 9:00"
        assert next_start.minute == 0, "–ú–∏–Ω—É—Ç—ã —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å 0"
        
        print("‚úÖ –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    
    def cleanup(self):
        """–û—á–∏—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        try:
            os.remove("test_notifications.json")
        except FileNotFoundError:
            pass

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ª–æ–≥–∏–∫–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...\n")
    
    tester = TestPauseLogic()
    
    try:
        tester.test_pause_on_user_response()
        tester.test_pause_in_personal_chat()
        tester.test_resume_logic()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        tester.cleanup()

if __name__ == "__main__":
    main() 